// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "08/23/2022 14:06:28"

// 
// Device: Altera 5CSEBA6U23I7DK Package UFBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module MUX1BITS2WAY (
	C,
	SEL,
	B,
	A);
output 	C;
input 	SEL;
input 	B;
input 	A;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \C~output_o ;
wire \SEL~input_o ;
wire \B~input_o ;
wire \A~input_o ;
wire \inst2~0_combout ;


cyclonev_io_obuf \C~output (
	.i(\inst2~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\C~output_o ),
	.obar());
// synopsys translate_off
defparam \C~output .bus_hold = "false";
defparam \C~output .open_drain_output = "false";
defparam \C~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \SEL~input (
	.i(SEL),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SEL~input_o ));
// synopsys translate_off
defparam \SEL~input .bus_hold = "false";
defparam \SEL~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = (!\SEL~input_o  & ((\A~input_o ))) # (\SEL~input_o  & (\B~input_o ))

	.dataa(!\SEL~input_o ),
	.datab(!\B~input_o ),
	.datac(!\A~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst2~0 .extended_lut = "off";
defparam \inst2~0 .lut_mask = 64'h1B1B1B1B1B1B1B1B;
defparam \inst2~0 .shared_arith = "off";
// synopsys translate_on

assign C = \C~output_o ;

endmodule
