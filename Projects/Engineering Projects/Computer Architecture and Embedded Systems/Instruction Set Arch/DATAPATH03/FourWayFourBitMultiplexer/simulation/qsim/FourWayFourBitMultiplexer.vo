// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "09/23/2022 21:39:24"

// 
// Device: Altera 5CSEBA6U23I7 Package UFBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FourWayFourBitMultiplexer (
	F,
	S,
	A,
	B,
	C,
	D);
output 	[0:3] F;
input 	[0:1] S;
input 	[0:3] A;
input 	[0:3] B;
input 	[0:3] C;
input 	[0:3] D;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \F[0]~output_o ;
wire \F[1]~output_o ;
wire \F[2]~output_o ;
wire \F[3]~output_o ;
wire \A[0]~input_o ;
wire \B[0]~input_o ;
wire \C[0]~input_o ;
wire \D[0]~input_o ;
wire \S[1]~input_o ;
wire \S[0]~input_o ;
wire \inst3|inst4~0_combout ;
wire \A[1]~input_o ;
wire \B[1]~input_o ;
wire \C[1]~input_o ;
wire \D[1]~input_o ;
wire \inst2|inst4~0_combout ;
wire \A[2]~input_o ;
wire \B[2]~input_o ;
wire \C[2]~input_o ;
wire \D[2]~input_o ;
wire \inst|inst4~0_combout ;
wire \A[3]~input_o ;
wire \B[3]~input_o ;
wire \C[3]~input_o ;
wire \D[3]~input_o ;
wire \inst1|inst4~0_combout ;


cyclonev_io_obuf \F[0]~output (
	.i(\inst3|inst4~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\F[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \F[0]~output .bus_hold = "false";
defparam \F[0]~output .open_drain_output = "false";
defparam \F[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \F[1]~output (
	.i(\inst2|inst4~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\F[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \F[1]~output .bus_hold = "false";
defparam \F[1]~output .open_drain_output = "false";
defparam \F[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \F[2]~output (
	.i(\inst|inst4~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\F[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \F[2]~output .bus_hold = "false";
defparam \F[2]~output .open_drain_output = "false";
defparam \F[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \F[3]~output (
	.i(\inst1|inst4~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\F[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \F[3]~output .bus_hold = "false";
defparam \F[3]~output .open_drain_output = "false";
defparam \F[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \C[0]~input (
	.i(C[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\C[0]~input_o ));
// synopsys translate_off
defparam \C[0]~input .bus_hold = "false";
defparam \C[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \D[0]~input (
	.i(D[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\D[0]~input_o ));
// synopsys translate_off
defparam \D[0]~input .bus_hold = "false";
defparam \D[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \S[1]~input (
	.i(S[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\S[1]~input_o ));
// synopsys translate_off
defparam \S[1]~input .bus_hold = "false";
defparam \S[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \S[0]~input (
	.i(S[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\S[0]~input_o ));
// synopsys translate_off
defparam \S[0]~input .bus_hold = "false";
defparam \S[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst3|inst4~0 (
// Equation(s):
// \inst3|inst4~0_combout  = ( \S[1]~input_o  & ( \S[0]~input_o  & ( \D[0]~input_o  ) ) ) # ( !\S[1]~input_o  & ( \S[0]~input_o  & ( \C[0]~input_o  ) ) ) # ( \S[1]~input_o  & ( !\S[0]~input_o  & ( \B[0]~input_o  ) ) ) # ( !\S[1]~input_o  & ( !\S[0]~input_o  
// & ( \A[0]~input_o  ) ) )

	.dataa(!\A[0]~input_o ),
	.datab(!\B[0]~input_o ),
	.datac(!\C[0]~input_o ),
	.datad(!\D[0]~input_o ),
	.datae(!\S[1]~input_o ),
	.dataf(!\S[0]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst3|inst4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst3|inst4~0 .extended_lut = "off";
defparam \inst3|inst4~0 .lut_mask = 64'h555533330F0F00FF;
defparam \inst3|inst4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \C[1]~input (
	.i(C[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\C[1]~input_o ));
// synopsys translate_off
defparam \C[1]~input .bus_hold = "false";
defparam \C[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \D[1]~input (
	.i(D[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\D[1]~input_o ));
// synopsys translate_off
defparam \D[1]~input .bus_hold = "false";
defparam \D[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst2|inst4~0 (
// Equation(s):
// \inst2|inst4~0_combout  = ( \S[1]~input_o  & ( \S[0]~input_o  & ( \D[1]~input_o  ) ) ) # ( !\S[1]~input_o  & ( \S[0]~input_o  & ( \C[1]~input_o  ) ) ) # ( \S[1]~input_o  & ( !\S[0]~input_o  & ( \B[1]~input_o  ) ) ) # ( !\S[1]~input_o  & ( !\S[0]~input_o  
// & ( \A[1]~input_o  ) ) )

	.dataa(!\A[1]~input_o ),
	.datab(!\B[1]~input_o ),
	.datac(!\C[1]~input_o ),
	.datad(!\D[1]~input_o ),
	.datae(!\S[1]~input_o ),
	.dataf(!\S[0]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst2|inst4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst2|inst4~0 .extended_lut = "off";
defparam \inst2|inst4~0 .lut_mask = 64'h555533330F0F00FF;
defparam \inst2|inst4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \C[2]~input (
	.i(C[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\C[2]~input_o ));
// synopsys translate_off
defparam \C[2]~input .bus_hold = "false";
defparam \C[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \D[2]~input (
	.i(D[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\D[2]~input_o ));
// synopsys translate_off
defparam \D[2]~input .bus_hold = "false";
defparam \D[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst4~0 (
// Equation(s):
// \inst|inst4~0_combout  = ( \S[1]~input_o  & ( \S[0]~input_o  & ( \D[2]~input_o  ) ) ) # ( !\S[1]~input_o  & ( \S[0]~input_o  & ( \C[2]~input_o  ) ) ) # ( \S[1]~input_o  & ( !\S[0]~input_o  & ( \B[2]~input_o  ) ) ) # ( !\S[1]~input_o  & ( !\S[0]~input_o  & 
// ( \A[2]~input_o  ) ) )

	.dataa(!\A[2]~input_o ),
	.datab(!\B[2]~input_o ),
	.datac(!\C[2]~input_o ),
	.datad(!\D[2]~input_o ),
	.datae(!\S[1]~input_o ),
	.dataf(!\S[0]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst4~0 .extended_lut = "off";
defparam \inst|inst4~0 .lut_mask = 64'h555533330F0F00FF;
defparam \inst|inst4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \C[3]~input (
	.i(C[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\C[3]~input_o ));
// synopsys translate_off
defparam \C[3]~input .bus_hold = "false";
defparam \C[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \D[3]~input (
	.i(D[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\D[3]~input_o ));
// synopsys translate_off
defparam \D[3]~input .bus_hold = "false";
defparam \D[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst1|inst4~0 (
// Equation(s):
// \inst1|inst4~0_combout  = ( \S[1]~input_o  & ( \S[0]~input_o  & ( \D[3]~input_o  ) ) ) # ( !\S[1]~input_o  & ( \S[0]~input_o  & ( \C[3]~input_o  ) ) ) # ( \S[1]~input_o  & ( !\S[0]~input_o  & ( \B[3]~input_o  ) ) ) # ( !\S[1]~input_o  & ( !\S[0]~input_o  
// & ( \A[3]~input_o  ) ) )

	.dataa(!\A[3]~input_o ),
	.datab(!\B[3]~input_o ),
	.datac(!\C[3]~input_o ),
	.datad(!\D[3]~input_o ),
	.datae(!\S[1]~input_o ),
	.dataf(!\S[0]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst1|inst4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst1|inst4~0 .extended_lut = "off";
defparam \inst1|inst4~0 .lut_mask = 64'h555533330F0F00FF;
defparam \inst1|inst4~0 .shared_arith = "off";
// synopsys translate_on

assign F[0] = \F[0]~output_o ;

assign F[1] = \F[1]~output_o ;

assign F[2] = \F[2]~output_o ;

assign F[3] = \F[3]~output_o ;

endmodule
